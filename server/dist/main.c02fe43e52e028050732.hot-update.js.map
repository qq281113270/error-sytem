{"version":3,"sources":["webpack://server/./app/index.js?","webpack://server/webpack/runtime/getFullHash?"],"names":["App","app","Koa","init","connectRedis","connectSql","addRoute","listen","promise","reslove","reject","Redis","console","log","connection","err","CheckTable","Route","server","setTimeout"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;;IAIMA,G;AACF,iBAAc;AAAA;;AACV,SAAKC,GAAL,GAAW,IAAIC,4CAAJ,EAAX;AACA,SAAKC,IAAL;AACH;;;;;;;;;;;uBAGS,KAAKC,YAAL,E;;;;uBAEA,KAAKC,UAAL,E;;;AACN;AACA,qBAAKC,QAAL,G,CACA;;AACA,qBAAKC,MAAL;;;;;;;;;;;;;;;;;;;;;;;;;uBAGMC,+CAAO,CAAC,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC/BC,mEAAA,CAAc,YAAM;AAChBC,2BAAO,CAACC,GAAR,CAAY,YAAZ;AACAJ,2BAAO;AACV,mBAHD;AAIAE,iEAAA,CAAY,YAAM;AACdC,2BAAO,CAACC,GAAR,CAAY,YAAZ;AACAH,0BAAM;AACT,mBAHD;AAIH,iBATY,C;;;;;;;;;;;;;;;;;;;;;;;;;uBAYPF,+CAAO,CAAC,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC/BI,8EAAA,CAAmB,UAACC,GAAD,EAAS;AACxB,wBAAIA,GAAJ,EAAS;AACLH,6BAAO,CAACC,GAAR,CAAY,QAAZ;AACAH,4BAAM;AACN,4BAAMK,GAAN;AACH;;AACD,wBAAIC,oDAAJ;AACAJ,2BAAO,CAACC,GAAR,CAAY,cAAZ;AACAJ,2BAAO;AACV,mBATD;AAUH,iBAXY,C;;;;;;;;;;;;;;;;;;+BAaN;AACP;AACA,UAAIQ,kDAAJ,CAAU,KAAKhB,GAAf;AACH;;;6BACQ;AACL,WAAKiB,MAAL,GAAc,KAAKjB,GAAL,CAASM,MAAT,CAAgB,IAAhB,EAAsB,YAAM;AACtCK,eAAO,CAACC,GAAR,CAAY,gCAAZ;AACH,OAFa,CAAd;AAIA,WAAKK,MAAL,CAAYC,UAAZ,CAAuB,IAAI,EAAJ,GAAS,IAAhC;AACH;;;;;;AAKL,iEAAe,IAAInB,GAAJ,EAAf,E;;;;;;;;;;;WCjEA,oD","file":"main.c02fe43e52e028050732.hot-update.js","sourcesContent":["import \"@babel/polyfill\";\nimport Koa from 'koa';\nimport { promise } from './utils';\nimport { CheckTable, connection, exec, addUser } from './db/index.js';\nimport { Redis } from './redis';\nimport Route from './routes/index';\n \n     \n     \nclass App {\n    constructor() {\n        this.app = new Koa();\n        this.init();\n    }\n    async init() {\n        // redis链接\n        await this.connectRedis();\n        // 数据库连接\n        await this.connectSql();\n        //加载路由\n        this.addRoute();\n        // 设置监听端口\n        this.listen();\n    }\n    async connectRedis() {\n        await promise((reslove, reject) => {\n            Redis.connect(() => {\n                console.log('Redis 链接成功');\n                reslove();\n            });\n            Redis.error(() => {\n                console.log('Redis 链接错误');\n                reject();\n            });\n        });\n    }\n    async connectSql() {\n        await promise((reslove, reject) => {\n            connection.connect((err) => {\n                if (err) {\n                    console.log('数据库连失败');\n                    reject();\n                    throw err;\n                }\n                new CheckTable();\n                console.log('mysql数据库连接成功');\n                reslove();\n            });\n        });\n    }\n    addRoute() {\n        // 导入路由\n        new Route(this.app);\n    }\n    listen() {\n        this.server = this.app.listen(3100, () => {\n            console.log('服务器启动成功:http://localhost:3100/');\n        });\n\n        this.server.setTimeout(5 * 60 * 1000);\n    }\n}\n\n\n\nexport default new App();\n","__webpack_require__.h = () => \"1203f8cebe3ec64ad615\""],"sourceRoot":""}