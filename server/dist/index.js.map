{"version":3,"sources":["webpack://server/webpack/universalModuleDefinition?","webpack://server/./app/config/constant.js?","webpack://server/./app/config/db.js?","webpack://server/./app/config/index.js?","webpack://server/./app/config/redis.js?","webpack://server/./app/config/token.js?","webpack://server/./app/constant/httpCode.js?","webpack://server/./app/constant/index.js?","webpack://server/./app/controller/user.js?","webpack://server/./app/db/checkTable.js?","webpack://server/./app/db/index.js?","webpack://server/./app/db/mysql.js?","webpack://server/./app/db/user.js?","webpack://server/./app/graphql/schema/index.js?","webpack://server/./app/graphql/schema/user/index.js?","webpack://server/./app/graphql/schema/user/resolvers.js?","webpack://server/./app/graphql/schema/user/schema.js?","webpack://server/./app/index.js?","webpack://server/./app/middleware/common.js?","webpack://server/./app/middleware/index.js?","webpack://server/./app/redis/index.js?","webpack://server/./app/redis/jwt.js?","webpack://server/./app/redis/redis.js?","webpack://server/./app/redis/user.js?","webpack://server/./app/routes/index.js?","webpack://server/./app/routes/user.js?","webpack://server/./app/service/user.js?","webpack://server/./app/utils/common.js?","webpack://server/./app/utils/index.js?","webpack://server/./node_modules/webpack/hot/log-apply-result.js?","webpack://server/./node_modules/webpack/hot/log.js?","webpack://server/./node_modules/webpack/hot/poll.js?","webpack://server/external \"@babel/polyfill\"?","webpack://server/external \"graphql\"?","webpack://server/external \"graphql-tools\"?","webpack://server/external \"graphql/type\"?","webpack://server/external \"http-errors\"?","webpack://server/external \"jsonwebtoken\"?","webpack://server/external \"jwt-redis\"?","webpack://server/external \"kill-port\"?","webpack://server/external \"koa\"?","webpack://server/external \"koa-bodyparser\"?","webpack://server/external \"koa-cookie\"?","webpack://server/external \"koa-router\"?","webpack://server/external \"koa2-cors\"?","webpack://server/external \"mysql\"?","webpack://server/external \"redis\"?"],"names":["tokenExpires","port","env","process","MYSQL_CONF","host","user","password","database","multipleStatements","charset","REDIS_CONF","options","auth_pass","module","exports","setExpirationTime","millisecond","Date","getTime","expiresTime","graphqlError","code","msg","unsupported","unauthorized","Controller","add","ctx","next","parameter","request","body","data","userService","getMessage","status","message","merge","response","edit","set","page","params","login","token","userInfo","require","CheckTable","constructor","tables","name","sql","init","forEach","table","queryTable","createTable","checkTable","length","exec","then","console","log","catch","error","connection","mysql","Promise","resolve","reject","query","err","result","addUser","phone","queryUser","andConditionData","orConditionData","andKeys","Object","keys","orKeys","key","substring","deleteUser","id","userResolvers","userSchema","resolvers","hello","mutation","App","app","koa","connectRedis","connectSql","addRoute","listen","promise","reslove","Redis","Route","server","setTimeout","common","router","use","bodyParser","cors","sign","verify","decode","webJwt","userIdCheckToken","userId","redisClient","value","checkToken","createToken","payload","ctime","now","expiresIn","userIdTokens","JSON","stringify","destroyToken","tokenOrId","tokens","RedisClass","url","createRedisClient","redis","connect","callback","on","ready","res","end","_key","get","del","getUserIfo","typeDefs","Query","createRouter","Router","prefix","middleware","header","cookies","addRouters","User","variables","baseSchema","schema","makeExecutableSchema","graphql","errors","routes","allowedMethods","secondaryRoute","registered","post","controller","Service","list","dataList","time","title","username","ags","userData","httpOnly","overwrite","fn","assign","target","i","arguments","source","prototype","hasOwnProperty","call"],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"server\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"server\"] = factory();\n\telse\n\t\troot[\"server\"] = factory();\n})(this, function() {\nreturn ","export const tokenExpires = 24 * 60 * 60 * 1000\r\nexport const port = 3100\r\n\r\n    ","const env = process.env.NODE_ENV; // 环境参数\r\nlet MYSQL_CONF = null;\r\n\r\nif (env === 'development') {\r\n    MYSQL_CONF = {\r\n        host: '127.0.0.1',\r\n        user: 'root',\r\n        password: '123456',\r\n        port: '3306',\r\n        database: 'admin',\r\n        // charset:'utf8mb4',   //字符集一定要写，否则表情包存储不了\r\n        multipleStatements: true, // 是否许一个query中有多个MySQL语句 （默认：false）\r\n    };\r\n}\r\nif (env === 'production') {\r\n    MYSQL_CONF = {\r\n        host: '127.0.0.1',\r\n        user: 'root',\r\n        password: '123456',\r\n        port: '3306',\r\n        database: 'admin',\r\n        charset: 'utf8mb4', //字符集一定要写，否则表情包存储不了\r\n        multipleStatements: true, // 是否许一个query中有多个MySQL语句 （默认：false）\r\n    };\r\n}\r\nexport { MYSQL_CONF };\r\n","export * from './db.js';\r\nexport * from './redis.js';\r\nexport * from './token.js';\r\nexport * from './constant.js';\r\n\r\n// export const MYSQL_CONF={\r\n//     name:123\r\n// }\r\n","const env = process.env.NODE_ENV  // 环境参数\r\nlet REDIS_CONF = null\r\n\r\nif (env === 'development') {\r\n    REDIS_CONF = {\r\n        host: '127.0.0.1', //地址\r\n        port: '6378', // 端口\r\n        options:{\r\n            auth_pass: 123456 // 密码\r\n        }\r\n    }\r\n}\r\nif (env === 'production') {\r\n    REDIS_CONF = {\r\n        host: '127.0.0.1',\r\n        port: '6378',\r\n        options:{\r\n            auth_pass: 123456\r\n        }\r\n    }\r\n}\r\n\r\nmodule.exports = {\r\n    REDIS_CONF\r\n}\r\n\r\n","import { tokenExpires } from './constant';\r\n\r\nexport const setExpirationTime = () => {\r\n    const millisecond = new Date().getTime();\r\n    const expiresTime = new Date(millisecond + tokenExpires); //一天后过期\r\n\r\n    return  expiresTime // da.toUTCString(); //将 1598789234953这种格式的转换成=> \"Sat, 29 Aug 2020 12:06:33 GMT\"\r\n};\r\n","const graphqlError = {\r\n  code :400,\r\n  msg :\"请求参数有误，graphql语法错误\",\r\n}\r\n\r\n\r\nconst unsupported = {\r\n  //对于当前请求的方法和所请求的资源，请求中提交的实体并不是服务器中所支持的格式，因此请求被拒绝。\r\n  code :415,\r\n  msg :\"服务器已经理解请求，但是拒绝执行它\",\r\n}\r\n\r\nconst unauthorized = {\r\n  // 当前请求需要用户验证. 如果验证不通过则返回401\r\n  code :401,\r\n  msg :\"当前请求需要用户验证.\",\r\n}\r\n\r\n \r\n\r\nexport {graphqlError,unsupported ,unauthorized };\r\n","// 整体输出\r\nexport * from './httpCode';","import userService from \"../service/user\";\r\nimport { unsupported, unauthorized } from \"../constant\";\r\nimport { merge } from \"../utils\";\r\nclass Controller {\r\n  static async add(ctx, next) {\r\n    // ctx.set(\"Content-Type\", \"application/json\")\r\n    const parameter = ctx.request.body; // 获取请求参数\r\n    //添加service\r\n    const data = await userService.add(ctx, next, parameter);\r\n    const getMessage = (data) => {\r\n      const { status } = data;\r\n      const message = {\r\n        1: () =>\r\n          merge(unsupported, {\r\n            msg: \"该用户名已经被注册过,请重新输入用户名\",\r\n          }),\r\n        2: () =>\r\n          merge(unsupported, {\r\n            msg: \"该手机号码已经被注册过,请重新输入手机号码\",\r\n          }),\r\n        3: () => ({\r\n          code: 200,\r\n          msg: \"注册成功\",\r\n        }),\r\n      };\r\n      return message[status]();\r\n    };\r\n    ctx.response.body = getMessage(data);\r\n  }\r\n  static edit(ctx, next) {\r\n    ctx.set(\"Content-Type\", \"application/json\");\r\n\r\n    var page = ctx.params.page; // 获取请求参数\r\n    //添加service\r\n    // const data = userService.list(page);\r\n\r\n    // ctx.response.body = \"d\";\r\n  }\r\n\r\n  static async login(ctx, next) {\r\n    // ctx.set(\"Content-Type\", \"application/json\")\r\n    var parameter = ctx.request.body; // 获取请求参数\r\n    //添加service\r\n    const data = await userService.login(ctx, next, parameter);\r\n    const getMessage = (data) => {\r\n      const { status, token, userInfo } = data;\r\n      const message = {\r\n        1: () =>\r\n          merge(unauthorized, {\r\n            msg: \"用户名错误，请重新输入用户名\",\r\n          }),\r\n        2: () =>\r\n          merge(unauthorized, {\r\n            msg: \"密码错误请重新输入密码\",\r\n          }),\r\n        3: () => ({\r\n          code: 200,\r\n          msg: \"登录成功\",\r\n          data: {\r\n            token,\r\n            userInfo,\r\n          },\r\n        }),\r\n      };\r\n      return message[status]();\r\n    };\r\n    ctx.response.body = getMessage(data);\r\n  }\r\n}\r\n\r\nexport default Controller;\r\n","import { connection, exec } from \"./mysql\";\r\nconst { MYSQL_CONF } = require(\"../config/db\");\r\n\r\nclass CheckTable {\r\n  constructor() {\r\n    this.tables = [\r\n      {\r\n        name: \"user\",\r\n        sql: `CREATE TABLE user(\r\n                    id INT(11) PRIMARY KEY  auto_increment primary key,\r\n                    name VARCHAR(25),\r\n                    phone VARCHAR(200),\r\n                    password VARCHAR(255)\r\n                ) AUTO_INCREMENT=1;\r\n           `,\r\n      },\r\n      {\r\n          name: 'collect',\r\n          sql: `\r\n         CREATE TABLE collect(\r\n              id INT(11) PRIMARY KEY,\r\n              name VARCHAR(25)  NOT NULL,\r\n              phone INT(11)  NOT NULL,\r\n              user_id INT(11)  NOT NULL,\r\n              FOREIGN KEY(user_id) REFERENCES user(id)\r\n         );\r\n         `,\r\n      },\r\n      {\r\n          name: 'code',\r\n          sql: `\r\n          CREATE TABLE code(\r\n            id INT(11) PRIMARY KEY,\r\n            name VARCHAR(25),\r\n            collect_id INT(11),\r\n            FOREIGN KEY(collect_id) REFERENCES collect(id),\r\n            user_id INT(11),\r\n            FOREIGN KEY(user_id) REFERENCES user(id)\r\n            );\r\n          `,\r\n      },\r\n      {\r\n        name: 'role',\r\n        sql: `\r\n        CREATE TABLE role(\r\n          id INT(11) PRIMARY KEY,\r\n          name VARCHAR(25),\r\n          root TINYINT(2)\r\n          );\r\n        `,\r\n       },\r\n    ];\r\n    this.init();\r\n  }\r\n  init() {\r\n    this.tables.forEach((table) => {\r\n      this.queryTable(table);\r\n    });\r\n  }\r\n  createTable() {}\r\n  async checkTable(data, table) {\r\n    if (data.length == 0) {\r\n      await exec(table.sql)\r\n        .then((data) => {\r\n          console.log(\"创建表成功\");\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"创建表失败=\", error);\r\n        });\r\n    }\r\n  }\r\n  async queryTable(table) {\r\n    const sql = `\r\n           SELECT\r\n           TABLE_NAME FROM INFORMATION_SCHEMA.TABLES\r\n           WHERE TABLE_SCHEMA='${MYSQL_CONF.database}' \r\n           AND TABLE_NAME= '${table.name}'`;\r\n    await exec(sql)\r\n      .then(async (data) => {\r\n        await this.checkTable(data, table);\r\n      })\r\n      .catch(() => {});\r\n  }\r\n}\r\n\r\nexport { CheckTable };\r\n","export { CheckTable } from './checkTable';\r\nexport { connection, exec } from './mysql';\r\nexport { addUser, deleteUser, queryUser } from './user';\r\n","import mysql from 'mysql';\r\nimport { MYSQL_CONF } from '../config/index';\r\n \r\n\r\n// 创建链接对象\r\nconst connection  = mysql.createConnection(MYSQL_CONF)\r\n\r\n\r\n// 统一执行 sql 的函数\r\nconst  exec = async (sql)=> {\r\n    return   await  new Promise((resolve, reject) => {\r\n        console.log('sql=',sql)\r\n        connection.query(sql, (err, result) => {\r\n            if (err) {\r\n                reject(err)\r\n                return\r\n            }\r\n            resolve(result)\r\n        })\r\n    })\r\n}\r\n\r\nexport {\r\n    connection,\r\n    exec,\r\n}\r\n","import { connection, exec } from \"./mysql\";\r\n// 添加用户\r\nconst addUser = async ({ name, phone, password }) => {\r\n  const sql = `insert into user(name,phone,password) values('${name}','${phone}',md5('${password}'));`;\r\n \r\n  return await exec(sql);\r\n};\r\n\r\n//查询用户\r\nconst queryUser = async (andConditionData = {}, orConditionData = {}, sql) => {\r\n  const andKeys = Object.keys(andConditionData);\r\n  const orKeys = Object.keys(orConditionData);\r\n  if (sql) {\r\n    return await exec(sql);\r\n  }\r\n  sql = `select * from user where `;\r\n\r\n  andKeys.forEach((key) => {\r\n    sql +=\r\n      key == \"password\"\r\n        ? ` ${key}=md5('${andConditionData[key]}') and`\r\n        : ` ${key}='${andConditionData[key]}' and`;\r\n  });\r\n\r\n  orKeys.forEach((key) => {\r\n    sql +=\r\n      key == \"password\"\r\n        ? ` ${key}=md5('${orConditionData[key]}') or`\r\n        : ` ${key}='${orConditionData[key]}' or`;\r\n  });\r\n  sql =\r\n    andKeys.length >= 1 && orKeys.length == 0\r\n      ? sql.substring(0, sql.length - 3)\r\n      : orKeys.length >= 1\r\n      ? sql.substring(0, sql.length - 2)\r\n      : sql;\r\n\r\n  \r\n  return await exec(sql);\r\n};\r\n\r\n//删除用户\r\nconst deleteUser = async (id) => {\r\n  const sql = `DELETE  FROM user  WHERE id=${id};`;\r\n  return await exec(sql);\r\n};\r\n\r\n// 导出\r\nexport { addUser, deleteUser, queryUser };\r\n","import {\r\n  GraphQLObjectType,\r\n  GraphQLNonNull,\r\n  GraphQLSchema,\r\n  GraphQLString,\r\n  GraphQLList,\r\n} from \"graphql/type\";\r\n//会员模块\r\nimport  userResolvers,  * as userSchema  from './user';\r\nconst user ={\r\n  userResolvers,\r\n  userSchema,\r\n}\r\n// import user from \"./user\";\r\n// import home from \"./home\";\r\nconsole.log('user=',user)\r\n\r\nexport  {user};\r\n// export {\r\n//   user\r\n// }\r\n","import resolvers from \"./resolvers\";\r\n// import * as schema from \"./schema\";\r\n// export * as userType from './schema.graphql'\r\n\r\nexport * from \"./schema\";\r\n// export * from \"./schema.graphql\";\r\n\r\nexport default resolvers;\r\n","// Provide resolver functions for your schema fields\r\nconst  hello = () => 'Hello world!';\r\n\r\n\r\nexport default {\r\n    mutation: {\r\n        // createUser,\r\n    },\r\n    query: {\r\n        // user,\r\n        // getUserInfo,\r\n        hello,\r\n    },\r\n};\r\n\r\n// export default {\r\n//         Query:{\r\n//             hello   \r\n//         }\r\n// }\r\n\r\n// export duf {\r\n//     Query:{\r\n//         hello\r\n//     }\r\n// }","export const hello = `\r\ntype Query {\r\n  hello: String\r\n}\r\n`;\r\n","import \"@babel/polyfill\";\r\nimport koa from \"koa\";\r\nimport { promise } from \"./utils\";\r\nimport { CheckTable, connection, exec, addUser } from \"./db/index.js\";\r\nimport { Redis } from \"./redis\";\r\nimport Route from \"./routes/index\";\r\nimport kill from \"kill-port\";\r\nimport { port } from \"./config\";\r\nconsole.log(12345)\r\nclass App {\r\n  constructor() {\r\n          this.app = new koa();\r\n            this.init();\r\n  }\r\n  async init() {\r\n    // redis链接\r\n    await this.connectRedis();\r\n    // 数据库连接\r\n    await this.connectSql();\r\n    //加载路由\r\n    this.addRoute();\r\n    // 设置监听端口\r\n    this.listen();\r\n  }\r\n  async connectRedis() {\r\n    await promise((reslove, reject) => {\r\n      Redis.connect(() => {\r\n        console.log(\"Redis 链接成功\");\r\n        reslove();\r\n      });\r\n      Redis.error(() => {\r\n        console.log(\"Redis 链接错误\");\r\n        reject();\r\n      });\r\n    });\r\n  }\r\n  async connectSql() {\r\n    await promise((reslove, reject) => {\r\n      connection.connect((err) => {\r\n        if (err) {\r\n          console.log(\"数据库连失败\");\r\n          reject();\r\n          throw err;\r\n        }\r\n        new CheckTable();\r\n        console.log(\"mysql数据库连接成功\");\r\n        reslove();\r\n      });\r\n    });\r\n  }\r\n  addRoute() {\r\n    // 导入路由\r\n    new Route(this.app);\r\n  }\r\n  listen() {\r\n    // try {\r\n    //   kill(port, \"tcp\");\r\n    // } catch (e) {}\r\n\r\n    this.server = this.app.listen(port, () => {\r\n      console.log(`服务器启动成功:http://localhost:${port}/`);\r\n    });\r\n\r\n    this.server.setTimeout(5 * 60 * 1000);\r\n  }\r\n}\r\n\r\nexport default new App();\r\n","import  bodyParser  from 'koa-bodyparser';\r\nimport  cors  from 'koa2-cors';\r\nimport cookie from 'koa-cookie';\r\n \r\nconst common = (app, router) => {\r\n    // 处理404\r\n    // app.use(function* (next) {\r\n    //     try {\r\n    //         yield* next;\r\n    //     } catch (e) {\r\n    //         this.status = 500;\r\n    //         this.body = '500';\r\n    //     }\r\n    //     if (parseInt(this.status) === 404) {\r\n    //         this.body = '404';\r\n    //     }\r\n    // });\r\n\r\n    //处理500\r\n    // router.get('/', function* (next) {\r\n    //     throw new Error('500');\r\n    // });\r\n\r\n    // 添加获取参数中间件\r\n    app.use(bodyParser());\r\n    // 添加 cookie\r\n    // app.use(cookie());\r\n    // // 添加跨域\r\n    // app.use(async (ctx, next)=> {\r\n    //   console.log(ctx.request.headers)\r\n    // // // if( req.headers.origin.toLowerCase() == \"http://www.zhangpeiyue.com\"\r\n    // // //     || req.headers.origin.toLowerCase() ==\"http://127.0.0.1\" ) {\r\n    // // //     //设置允许跨域的域名，*代表允许任意域名跨域\r\n    // // //     res.header(\"Access-Control-Allow-Origin\", req.headers.origin);\r\n    // // // }\r\n    //     // ctx.set('Access-Control-Allow-Origin', '*');\r\n    //      //设置允许跨域的域名，*代表允许任意域名跨域\r\n    //      ctx.set(\"Access-Control-Allow-Origin\",\"*\");\r\n    // //允许的header类型\r\n    // ctx.set(\"Access-Control-Allow-Headers\",\"content-type\");\r\n    // //跨域允许的请求方式 \r\n    // ctx.set(\"Access-Control-Allow-Methods\",\"DELETE,PUT,POST,GET,OPTIONS\");\r\n    // //     ctx.set('Access-Control-Allow-Headers', 'Content-Type, Content-Length, Authorization, Accept, X-Requested-With , yourHeaderFeild');\r\n    // //     ctx.set('Access-Control-Allow-Methods', 'PUT, POST, GET, DELETE, OPTIONS');\r\n    //      await next();\r\n    // //     if (ctx.method == 'OPTIONS') {\r\n    // //       ctx.body = 200; \r\n    // //     } else {\r\n    // //       await next();\r\n    // //     }\r\n    //   });\r\n    // 跨域\r\n      app.use(cors());\r\n\r\n};\r\n\r\nexport default common;\r\n","import common from './common'\r\n \r\n\r\nexport{\r\n    common, \r\n}\r\n     \r\n ","import RedisClass,{\r\n    Redis,\r\n    redisClient\r\n} from \"./redis\";\r\n \r\n\r\nexport    {\r\n    Redis,\r\n    redisClient,\r\n    RedisClass \r\n};\r\n\r\nexport *  from \"./jwt\";\r\nexport *  from \"./user\";\r\n ","import { Redis, redisClient } from \"./redis\";\r\nimport JWTR from \"jwt-redis\";\r\nimport webJwt from \"jsonwebtoken\";\r\nimport { merge, promise } from \"../utils\";\r\n// const jwtr = new JWTR(redisClient);\r\n// const { sign, verify, destroy } = jwtr;\r\nconst { sign, verify, decode } = webJwt;\r\n// var secret = \"secret\";\r\n// var jti = \"test\";\r\n// var payload = { jti };\r\n\r\n// 用用户id验证token\r\nconst userIdCheckToken = (userId) => {\r\n  return promise((resolve, reject) => {\r\n    redisClient.keys(`userid_${userId}_*`, (error, value) => {\r\n      if (error) {\r\n        reject(error);\r\n      } else {\r\n        resolve(value);\r\n      }\r\n    });\r\n  });\r\n};\r\n\r\n//验证token\r\nconst checkToken = (token) => {\r\n  return promise((resolve, reject) => {\r\n    redisClient.keys(`userid_*_${token}`, (error, value) => {\r\n      if (error) {\r\n        reject(error);\r\n      } else {\r\n        resolve(value);\r\n      }\r\n    });\r\n  });\r\n};\r\n\r\nconst createToken = async (userInfo = {}, payload = {}) => {\r\n  const { id = \"\" } = userInfo;\r\n  //  产生token\r\n  payload = merge(\r\n    {\r\n      ctime: Date.now(), //创建时间\r\n    },\r\n    payload\r\n  );\r\n  //创建token\r\n  const token = await sign(payload, `${id}`, { expiresIn: 0 });\r\n  //获取用户token key\r\n  const userIdTokens = await userIdCheckToken(id);\r\n  if (userIdTokens && userIdTokens.length >= 1) {\r\n    // 删除多余的key实现单点登录\r\n    userIdTokens.forEach(async (key) => {\r\n      await Redis.del(key);\r\n    });\r\n  }\r\n  // 重新设置 redis \r\n  await Redis.set(`userid_${id}_${token}`, JSON.stringify(userInfo));\r\n\r\n  return token;\r\n};\r\n\r\n//销毁token\r\nconst destroyToken = async(tokenOrId) => {\r\n  const userIdTokens = await userIdCheckToken(tokenOrId)||[];\r\n  const tokens = await checkToken(tokenOrId)||[];\r\n  merge(userIdTokens,tokens).forEach(async (key)=>{\r\n    await Redis.del(key);\r\n  }) \r\n  return \"成功删除token\"\r\n};\r\n\r\n\r\nexport { createToken, checkToken, destroyToken,userIdCheckToken };\r\n","import redis from 'redis';\r\nimport { merge, promise } from '../utils';\r\nimport { REDIS_CONF } from '../config';\r\nclass RedisClass {\r\n    constructor(port, url, options = {}) {\r\n        this.port = port;\r\n        this.url = url;\r\n        this.options = options;\r\n    }\r\n    //连接\r\n    createRedisClient() {\r\n        this.redisClient = redis.createClient(\r\n            this.port,\r\n            this.url,\r\n            this.options\r\n        );\r\n    }\r\n    // 连接\r\n    connect(callback = () => {}) {\r\n        return promise((resolve, reject) => {\r\n            this.redisClient.on('connect', () => {\r\n                callback();\r\n                resolve();\r\n            });\r\n        });\r\n    }\r\n    ready(callback = () => {}) {\r\n        return promise((resolve, reject) => {\r\n            this.redisClient.on('ready', (err, res) => {\r\n                if (err) {\r\n                    callback(error);\r\n                    reject(error);\r\n                } else {\r\n                    resolve(res);\r\n                }\r\n            });\r\n        });\r\n    }\r\n    error(callback = () => {}) {\r\n        return promise((resolve, reject) => {\r\n            this.redisClient.on('error', (error) => {\r\n                callback(error);\r\n                reject(error);\r\n            });\r\n        });\r\n    }\r\n    end(callback = () => {}) {\r\n        this.redisClient.on('end', (err, res) => {\r\n            if (err) {\r\n                callback(error);\r\n                reject(error);\r\n            } else {\r\n                resolve(res);\r\n            }\r\n        });\r\n    }\r\n    set(key, value, callback = () => {},options=()=>{}) {\r\n      return promise((resolve, reject) => {\r\n        this.redisClient.set(key, value, (error, res) => {\r\n            if (error) {\r\n                callback(error);\r\n                reject(error);\r\n            } else {\r\n                let keys = Object.keys(options) \r\n                keys.forEach((_key)=>{\r\n                  this.redisClient[_key](key,options[key])\r\n                })\r\n                callback(res);\r\n                resolve(res);\r\n            }\r\n        });\r\n    });\r\n\r\n    }\r\n    get(key,callback=()=>{}) {\r\n        return promise((resolve, reject) => {\r\n            this.redisClient.get(key, (error, res) => {\r\n                if (error) {\r\n                    callback(error);\r\n                    reject(error);\r\n                } else {\r\n                    resolve(res);\r\n                }\r\n            });\r\n        });\r\n    }\r\n    del(key,callback=()=>{}){\r\n        return promise((resolve, reject) => {\r\n            this.redisClient.del(key, (error, res) => {\r\n                if (error) {\r\n                    callback(error);\r\n                    reject(error);\r\n                } else {\r\n                    resolve(res);\r\n                }\r\n            });\r\n        });\r\n    }\r\n    init() {\r\n        this.createRedisClient();\r\n        return this;\r\n    }\r\n}\r\n \r\n\r\nexport const Redis = new RedisClass(\r\n    REDIS_CONF.port,\r\n    REDIS_CONF.host,\r\n    REDIS_CONF.options\r\n);\r\n\r\nRedis.init();\r\nexport const redisClient = Redis.redisClient;\r\nexport default RedisClass;\r\n","import {userIdCheckToken,checkToken } from \"./jwt\";\r\nimport { Redis, redisClient } from \"./redis\";\r\nimport { merge, promise } from '../utils';\r\n\r\n// 获取用户信息\r\nconst getUserIfo = async (tokenOrId) => {\r\n  const userIdTokens = (await userIdCheckToken(tokenOrId)) || [];\r\n  const tokens = (await checkToken(tokenOrId)) || [];\r\n  const data = await Redis.get(merge(userIdTokens,tokens)[0]);\r\n  return data;\r\n};\r\n\r\nexport { getUserIfo };\r\n","import {\r\n  GraphQLObjectType,\r\n  GraphQLNonNull,\r\n  GraphQLSchema,\r\n  GraphQLString,\r\n  GraphQLList,\r\n} from \"graphql/type\";\r\nimport {\r\n  graphql,\r\n  Source,\r\n  validateSchema,\r\n  parse,\r\n  validate,\r\n  execute,\r\n  formatError,\r\n  getOperationAST,\r\n  specifiedRules,\r\n  validationRules,\r\n  // gql,\r\n} from \"graphql\";\r\n// import schema from '../graphql/schema';\r\nimport httpError from \"http-errors\";\r\nimport { merge } from \"../utils\";\r\nimport { graphqlError } from \"../constant\";\r\nimport Router from \"koa-router\";\r\nimport { makeExecutableSchema } from \"graphql-tools\";\r\n// import Home from \"./home\";\r\nimport User from \"./user\";\r\nimport { common } from \"../middleware/index\";\r\nimport { user } from \"../graphql/schema\"; \r\n// import  userResolvers,  * as userSchema  from '../graphql/schema/user/index.js';\r\n\r\n\r\n\r\n// console.log('userResolvers===',userResolvers)\r\n// console.log('userSchema===',userSchema)\r\n//  Construct a schema, using GraphQL schema language\r\nconst typeDefs = `\r\n  type Query {\r\n    hello: String\r\n  }\r\n`;\r\n\r\n  \r\n// Provide resolver functions for your schema fields\r\nconst resolvers = {\r\n  Query: {\r\n    hello: () => \"Hello world!\",\r\n  },\r\n};\r\n\r\nclass Route {\r\n  constructor(app) {\r\n    this.app = app;\r\n    // this.router = router;\r\n    this.init();\r\n  }\r\n  createRouter() {\r\n    this.router = new Router({\r\n      prefix: \"/api\", // 给路由统一加个前缀：\r\n    });\r\n  }\r\n  // 添加中间件\r\n  middleware() {\r\n    // this.app.use(\r\n    //   webpackDevMiddleware(compiler, {\r\n    //     publicPath: config.output.publicPath,\r\n    //   })\r\n    // );\r\n\r\n    // 添加 404 500 中间件\r\n    common(this.app, this.router);\r\n  }\r\n\r\n  checkToken() {\r\n    this.router.use(async (ctx, next) => {\r\n      // console.log('ctx.request==',ctx.request.header)\r\n      const {\r\n        request: { header },\r\n        cookies,\r\n      } = ctx;\r\n\r\n      let token = cookies.get(\"token\") || header.token;\r\n      console.log(\"token=\", token);\r\n\r\n      //   ctx.cookies.set('cid','comedy',{\r\n      //     domain:'localhost',     //写cookie所在的域名\r\n      //     path:'/index',          //写cookie所在的路径\r\n      //     maxAge:60*1000,         //写cookie有效时长\r\n      //     expires:7,\r\n      //     httpOnly:false,\r\n      //     overwrite:false\r\n      // })\r\n      // ctx.body = 'cookie is ok'\r\n\r\n      console.log(\"中间键1开始\");\r\n\r\n      await next();\r\n      console.log(\"中间键1结束\");\r\n    });\r\n  }\r\n  // 添加路由\r\n  addRouters() {\r\n    new User(this.app, this.router);\r\n    // new Home(this.app,router);\r\n\r\n    console.log(\"checkToken====\");\r\n\r\n    this.checkToken();\r\n\r\n    // 查询\r\n    this.router.get(\"/data\", async (ctx, next) => {\r\n      const {\r\n        query: { query = \"\", variables = {} },\r\n        response,\r\n        request,\r\n      } = ctx;\r\n      const {\r\n        body: {\r\n          // mutation = '', variables = {}\r\n        },\r\n      } = request;\r\n\r\n      // const { query = '', variables = {} } = ctx.query;\r\n      // const { response } = ctx;\r\n      // console.log('schema==',schema)\r\n      console.log(\"query==\", query);\r\n      console.log(\"variables==\", variables);\r\n      console.log(\"token=====\", ctx.cookies.get(\"token\"));\r\n      // ctx.response.body = {\r\n      //   name:'123'\r\n      // }\r\n      const baseSchema = `\r\n                    schema {\r\n                        query: Query\r\n                        mutation: Mutation\r\n                    }\r\n              `;\r\n\r\n      const schema = makeExecutableSchema({\r\n        typeDefs: [\r\n          // baseSchema,\r\n          typeDefs,\r\n          //   baseSchema,\r\n          //   userType,\r\n          //   songType,\r\n          //   playlistType\r\n        ],\r\n        resolvers: resolvers,\r\n        //  merge(\r\n        //   {},\r\n        //   userResolvers,\r\n        //   songResolvers,\r\n        //   playlistResolvers\r\n        // )\r\n      });\r\n\r\n      await graphql(schema, query, { ctx, next }, variables)\r\n        .then((data) => {\r\n          const { errors } = data;\r\n          console.log(\"data=\", data);\r\n          console.log(\"stringify data=\", JSON.stringify(data));\r\n\r\n          if (errors) {\r\n            response.body = merge(graphqlError, {\r\n              errors,\r\n            });\r\n          } else {\r\n            console.log(\"get==\", data);\r\n            // ctx.response.body = {\r\n            //   name:'123'\r\n            // }\r\n            response.body = data;\r\n\r\n            // JSON.stringify(data);\r\n          }\r\n        })\r\n        .catch((error) => {\r\n          console.log(\"error==\", error);\r\n        });\r\n    });\r\n    // //变异\r\n    // this.router.post('/data', async (ctx, next) => {\r\n    //     const {\r\n    //         // query: { query = '', variables = {} },\r\n    //         response,\r\n    //         request,\r\n    //     } = ctx;\r\n    //     const {\r\n    //         body: { mutation = '', variables = {} },\r\n    //     } = request;\r\n    //     await graphql(schema, mutation, { ctx, next }, variables)\r\n    //         .then((data) => {\r\n    //             const { errors } = data;\r\n    //             if (errors) {\r\n    //                 response.body = merge(graphqlError, {\r\n    //                     errors,\r\n    //                 });\r\n    //             } else {\r\n    //                 console.log('post==', data);\r\n    //                 response.body = data;\r\n    //             }\r\n    //         })\r\n    //         .catch((error) => {\r\n    //             console.log('error==', error);\r\n    //         });\r\n    // });\r\n\r\n    //  const server = new ApolloServer({ typeDefs, resolvers });\r\n\r\n    //  this.router.get('/data',server.getMiddleware())\r\n    // 挂载路由中间件\r\n    this.app.use(this.router.routes()).use(this.router.allowedMethods());\r\n\r\n    // this.app.use(this.router.routes()).use(this.router.allowedMethods());\r\n  }\r\n  init() {\r\n    // 添加中间件\r\n    this.middleware();\r\n    //创建路由\r\n    this.createRouter();\r\n\r\n    // 添加路由\r\n    this.addRouters();\r\n  }\r\n}\r\n\r\nexport default   Route;\r\n","import controller from \"../controller/user\";\r\nimport Router from \"koa-router\"; // koa 路由中间件\r\n\r\nclass Route {\r\n  constructor(app, router) {\r\n    this.app = app;\r\n    this.router = router;\r\n    this.init();\r\n  }\r\n  createRouter() {\r\n    this.secondaryRoute = new Router({\r\n      prefix: \"/user\", // 给路由统一加个前缀：\r\n    });\r\n    return this.secondaryRoute;\r\n  }\r\n  middleware() {\r\n    // 处理404\r\n    // this.app.use('/user',function* (next) {\r\n    //     try {\r\n    //         yield* next;\r\n    //     } catch (e) {\r\n    //         this.status = 500;\r\n    //         this.body = '500';\r\n    //     }\r\n    //     if (parseInt(this.status) === 404) {\r\n    //         this.body = '404';\r\n    //     }\r\n    // });\r\n  }\r\n  // 添加路由\r\n  addRouters() {\r\n    // 添加路由\r\n    this.registered();\r\n    this.login();\r\n    this.router.use(this.secondaryRoute.routes()); //挂载二级路由\r\n  }\r\n  init() {\r\n    // 创建路由\r\n    this.createRouter();\r\n    // 添加中间件\r\n    this.middleware();\r\n    // 添加路由\r\n    this.addRouters();\r\n  }\r\n  registered() {\r\n    // 添加 接口\r\n    this.secondaryRoute.post(\"/register\", controller.add);\r\n  }\r\n  login() {\r\n    // 添加 接口\r\n    this.secondaryRoute.post(\"/login\", controller.login);\r\n  }\r\n}\r\n\r\nexport default Route;\r\n","import { addUser, deleteUser, queryUser } from '../db/user';\r\nimport { unsupported, unauthorized } from '../constant';\r\nimport { merge } from '../utils';\r\nimport { createToken, checkToken, destroyToken, getUserIfo } from '../redis';\r\nimport { setExpirationTime } from '../config';\r\n\r\n\r\nclass Service {\r\n    static list(page) {\r\n        console.log('page=', page);\r\n        const dataList = {\r\n            list: [\r\n                {\r\n                    time: '2019-7-10',\r\n                    id: 1,\r\n                    title: 'this is news 1',\r\n                    url: '/news/1',\r\n                },\r\n                {\r\n                    time: '2019-8-10',\r\n                    id: 2,\r\n                    title: 'this is news 2',\r\n                    url: '/news/2',\r\n                },\r\n            ],\r\n        };\r\n\r\n        return dataList.list[page] || {};\r\n    }\r\n\r\n    //注册用户\r\n    static async add(ctx, next, parameter) {\r\n        const { username: name, phone, password } = parameter;\r\n        /*\r\n     1 查询用户名是否被注册过，\r\n     2 查询手机号码是否被注册过\r\n     3 如果都没有被注册那么就可以注册\r\n    */\r\n        let userInfo = await this.queryUser({\r\n            name,\r\n        });\r\n\r\n        userInfo = userInfo.length >= 1 ? userInfo[0] : null;\r\n        if (userInfo && userInfo.id) {\r\n            return {\r\n                status: 1,\r\n            };\r\n        }\r\n\r\n        userInfo = await this.queryUser({\r\n            phone,\r\n        });\r\n        userInfo = userInfo.length >= 1 ? userInfo[0] : null;\r\n        if (userInfo && userInfo.id) {\r\n            return {\r\n                status: 2,\r\n            };\r\n        }\r\n        const data = await addUser({\r\n            name,\r\n            phone,\r\n            password,\r\n        });\r\n        if (data) {\r\n            return {\r\n                status: 3,\r\n            };\r\n        }\r\n    }\r\n    // 编辑用户\r\n    static async edit(ctx, next, parameter) {}\r\n    // 数据库中查询用户\r\n    static async queryUser(...ags) {\r\n        const userData = await queryUser(...ags);\r\n        return userData;\r\n    }\r\n    // 登录\r\n    static async login(ctx, next, parameter = {}) {\r\n        const { username: name, phone, password } = parameter;\r\n        const { request, response,cookies } = ctx;\r\n \r\n\r\n        /*\r\n      1.先查询用户名是否正确，\r\n      2.查询用户和密码是否正确\r\n      3.创建token,存储到redis中\r\n      4.把用户信息挂载response中\r\n    */\r\n        let userInfo = await this.queryUser({\r\n            name,\r\n        });\r\n\r\n        userInfo = userInfo.length >= 1 ? userInfo[0] : null;\r\n        if (!userInfo) {\r\n            return {\r\n                status: 1,\r\n            };\r\n        }\r\n\r\n        userInfo = await this.queryUser({\r\n            password,\r\n        });\r\n        userInfo = userInfo.length >= 1 ? userInfo[0] : null;\r\n        if (!userInfo) {\r\n            return {\r\n                status: 2,\r\n            };\r\n        }\r\n        userInfo = await queryUser({\r\n            name,\r\n            password,\r\n        });\r\n        userInfo = userInfo.length >= 1 ? userInfo[0] : null;\r\n\r\n        /*\r\n     创建 createToken  \r\n    */\r\n        const token = await createToken(userInfo);\r\n        delete userInfo.password;\r\n        ctx.response.userInfo = userInfo;\r\n        console.log('setExpirationTime=', setExpirationTime());\r\n        // console.log('token=', token);\r\n        // console.log('request=', request);\r\n        // console.log('session=', session);\r\n       console.log('cookies===',cookies)\r\n\r\n        // cookie.expires = false;\r\n        // cookie.maxAge = 5 * 60 * 1000;\r\n        cookies.set('token', token, {\r\n            httpOnly: false,\r\n            overwrite: false,\r\n            // expires: setExpirationTime(),\r\n        });\r\n        if (userInfo) {\r\n            //登录成功\r\n            return {\r\n                status: 3,\r\n                token,\r\n                userInfo,\r\n            };\r\n        }\r\n    }\r\n}\r\n\r\nexport default Service;\r\n","const promise =(fn=()=>{})=>{\r\n   \r\n  return new Promise((resolve,reject)=>{\r\n      fn(resolve,reject)\r\n  })\r\n\r\n}\r\n\r\nconst merge = Object.assign ||\r\n  function (target) {\r\n    for (var i = 1; i < arguments.length; i++) {\r\n      var source = arguments[i];\r\n      for (var key in source) {\r\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\r\n          target[key] = source[key];\r\n        }\r\n      }\r\n    }\r\n    return target;\r\n  };\r\n\r\nexport {\r\n    promise ,\r\n    merge\r\n};\r\n","import { promise, merge } from \"./common\";\r\n// export * from \"./jwt\";\r\n\r\nexport { merge, promise };\r\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\nmodule.exports = function (updatedModules, renewedModules) {\n\tvar unacceptedModules = updatedModules.filter(function (moduleId) {\n\t\treturn renewedModules && renewedModules.indexOf(moduleId) < 0;\n\t});\n\tvar log = require(\"./log\");\n\n\tif (unacceptedModules.length > 0) {\n\t\tlog(\n\t\t\t\"warning\",\n\t\t\t\"[HMR] The following modules couldn't be hot updated: (They would need a full reload!)\"\n\t\t);\n\t\tunacceptedModules.forEach(function (moduleId) {\n\t\t\tlog(\"warning\", \"[HMR]  - \" + moduleId);\n\t\t});\n\t}\n\n\tif (!renewedModules || renewedModules.length === 0) {\n\t\tlog(\"info\", \"[HMR] Nothing hot updated.\");\n\t} else {\n\t\tlog(\"info\", \"[HMR] Updated modules:\");\n\t\trenewedModules.forEach(function (moduleId) {\n\t\t\tif (typeof moduleId === \"string\" && moduleId.indexOf(\"!\") !== -1) {\n\t\t\t\tvar parts = moduleId.split(\"!\");\n\t\t\t\tlog.groupCollapsed(\"info\", \"[HMR]  - \" + parts.pop());\n\t\t\t\tlog(\"info\", \"[HMR]  - \" + moduleId);\n\t\t\t\tlog.groupEnd(\"info\");\n\t\t\t} else {\n\t\t\t\tlog(\"info\", \"[HMR]  - \" + moduleId);\n\t\t\t}\n\t\t});\n\t\tvar numberIds = renewedModules.every(function (moduleId) {\n\t\t\treturn typeof moduleId === \"number\";\n\t\t});\n\t\tif (numberIds)\n\t\t\tlog(\n\t\t\t\t\"info\",\n\t\t\t\t'[HMR] Consider using the optimization.moduleIds: \"named\" for module names.'\n\t\t\t);\n\t}\n};\n","var logLevel = \"info\";\n\nfunction dummy() {}\n\nfunction shouldLog(level) {\n\tvar shouldLog =\n\t\t(logLevel === \"info\" && level === \"info\") ||\n\t\t([\"info\", \"warning\"].indexOf(logLevel) >= 0 && level === \"warning\") ||\n\t\t([\"info\", \"warning\", \"error\"].indexOf(logLevel) >= 0 && level === \"error\");\n\treturn shouldLog;\n}\n\nfunction logGroup(logFn) {\n\treturn function (level, msg) {\n\t\tif (shouldLog(level)) {\n\t\t\tlogFn(msg);\n\t\t}\n\t};\n}\n\nmodule.exports = function (level, msg) {\n\tif (shouldLog(level)) {\n\t\tif (level === \"info\") {\n\t\t\tconsole.log(msg);\n\t\t} else if (level === \"warning\") {\n\t\t\tconsole.warn(msg);\n\t\t} else if (level === \"error\") {\n\t\t\tconsole.error(msg);\n\t\t}\n\t}\n};\n\n/* eslint-disable node/no-unsupported-features/node-builtins */\nvar group = console.group || dummy;\nvar groupCollapsed = console.groupCollapsed || dummy;\nvar groupEnd = console.groupEnd || dummy;\n/* eslint-enable node/no-unsupported-features/node-builtins */\n\nmodule.exports.group = logGroup(group);\n\nmodule.exports.groupCollapsed = logGroup(groupCollapsed);\n\nmodule.exports.groupEnd = logGroup(groupEnd);\n\nmodule.exports.setLogLevel = function (level) {\n\tlogLevel = level;\n};\n\nmodule.exports.formatError = function (err) {\n\tvar message = err.message;\n\tvar stack = err.stack;\n\tif (!stack) {\n\t\treturn message;\n\t} else if (stack.indexOf(message) < 0) {\n\t\treturn message + \"\\n\" + stack;\n\t} else {\n\t\treturn stack;\n\t}\n};\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n/*globals __resourceQuery */\nif (module.hot) {\n\tvar hotPollInterval = +__resourceQuery.substr(1) || 10 * 60 * 1000;\n\tvar log = require(\"./log\");\n\n\tvar checkForUpdate = function checkForUpdate(fromUpdate) {\n\t\tif (module.hot.status() === \"idle\") {\n\t\t\tmodule.hot\n\t\t\t\t.check(true)\n\t\t\t\t.then(function (updatedModules) {\n\t\t\t\t\tif (!updatedModules) {\n\t\t\t\t\t\tif (fromUpdate) log(\"info\", \"[HMR] Update applied.\");\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\trequire(\"./log-apply-result\")(updatedModules, updatedModules);\n\t\t\t\t\tcheckForUpdate(true);\n\t\t\t\t})\n\t\t\t\t.catch(function (err) {\n\t\t\t\t\tvar status = module.hot.status();\n\t\t\t\t\tif ([\"abort\", \"fail\"].indexOf(status) >= 0) {\n\t\t\t\t\t\tlog(\"warning\", \"[HMR] Cannot apply update.\");\n\t\t\t\t\t\tlog(\"warning\", \"[HMR] \" + log.formatError(err));\n\t\t\t\t\t\tlog(\"warning\", \"[HMR] You need to restart the application!\");\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlog(\"warning\", \"[HMR] Update failed: \" + log.formatError(err));\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t}\n\t};\n\tsetInterval(checkForUpdate, hotPollInterval);\n} else {\n\tthrow new Error(\"[HMR] Hot Module Replacement is disabled.\");\n}\n","module.exports = require(\"@babel/polyfill\");;","module.exports = require(\"graphql\");;","module.exports = require(\"graphql-tools\");;","module.exports = require(\"graphql/type\");;","module.exports = require(\"http-errors\");;","module.exports = require(\"jsonwebtoken\");;","module.exports = require(\"jwt-redis\");;","module.exports = require(\"kill-port\");;","module.exports = require(\"koa\");;","module.exports = require(\"koa-bodyparser\");;","module.exports = require(\"koa-cookie\");;","module.exports = require(\"koa-router\");;","module.exports = require(\"koa2-cors\");;","module.exports = require(\"mysql\");;","module.exports = require(\"redis\");;"],"sourceRoot":""}