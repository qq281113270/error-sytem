{"version":3,"sources":["webpack://server/webpack/universalModuleDefinition?","webpack://server/./app/config/constant.js?","webpack://server/./app/config/db.js?","webpack://server/./app/config/index.js?","webpack://server/./app/config/redis.js?","webpack://server/./app/config/token.js?","webpack://server/./app/constant/httpCode.js?","webpack://server/./app/constant/index.js?","webpack://server/./app/controller/user.js?","webpack://server/./app/db/checkTable.js?","webpack://server/./app/db/index.js?","webpack://server/./app/db/mysql.js?","webpack://server/./app/db/user.js?","webpack://server/./app/graphql/schema/index.js?","webpack://server/./app/graphql/schema/user/index.js?","webpack://server/./app/graphql/schema/user/resolvers.js?","webpack://server/./app/graphql/schema/user/schema.js?","webpack://server/./app/index.js?","webpack://server/./app/middleware/common.js?","webpack://server/./app/middleware/index.js?","webpack://server/./app/redis/index.js?","webpack://server/./app/redis/jwt.js?","webpack://server/./app/redis/redis.js?","webpack://server/./app/redis/user.js?","webpack://server/./app/routes/index.js?","webpack://server/./app/routes/user.js?","webpack://server/./app/service/user.js?","webpack://server/./app/utils/common.js?","webpack://server/./app/utils/index.js?","webpack://server/./app/graphql/schema/user/schema.graphql?","webpack://server/./node_modules/webpack/hot/log-apply-result.js?","webpack://server/./node_modules/webpack/hot/log.js?","webpack://server/./node_modules/webpack/hot/poll.js?","webpack://server/external \"@babel/polyfill\"?","webpack://server/external \"graphql\"?","webpack://server/external \"graphql-tools\"?","webpack://server/external \"graphql/type\"?","webpack://server/external \"http-errors\"?","webpack://server/external \"jsonwebtoken\"?","webpack://server/external \"jwt-redis\"?","webpack://server/external \"kill-port\"?","webpack://server/external \"koa\"?","webpack://server/external \"koa-bodyparser\"?","webpack://server/external \"koa-cookie\"?","webpack://server/external \"koa-router\"?","webpack://server/external \"koa2-cors\"?","webpack://server/external \"mysql\"?","webpack://server/external \"redis\"?"],"names":["tokenExpires","port","env","process","MYSQL_CONF","host","user","password","database","multipleStatements","charset","REDIS_CONF","options","auth_pass","module","exports","setExpirationTime","millisecond","Date","getTime","expiresTime","graphqlError","code","msg","unsupported","unauthorized","Controller","add","ctx","next","parameter","request","body","data","userService","getMessage","status","message","merge","response","edit","set","page","params","login","token","userInfo","require","CheckTable","constructor","tables","name","sql","init","forEach","table","queryTable","createTable","checkTable","length","exec","then","console","log","catch","error","connection","mysql","Promise","resolve","reject","query","err","result","addUser","phone","queryUser","andConditionData","orConditionData","andKeys","Object","keys","orKeys","key","substring","deleteUser","id","userResolvers","userSchema","resolvers","hello","mutation","App","app","koa","connectRedis","connectSql","addRoute","listen","promise","reslove","Redis","Route","server","setTimeout","common","router","use","bodyParser","cors","sign","verify","decode","webJwt","userIdCheckToken","userId","redisClient","value","checkToken","createToken","payload","ctime","now","expiresIn","userIdTokens","JSON","stringify","destroyToken","tokenOrId","tokens","RedisClass","url","createRedisClient","redis","connect","callback","on","ready","res","end","_key","get","del","getUserIfo","typeDefs","Query","createRouter","Router","prefix","middleware","header","cookies","addRouters","User","variables","baseSchema","schema","makeExecutableSchema","graphql","errors","routes","allowedMethods","secondaryRoute","registered","post","controller","Service","list","dataList","time","title","username","ags","userData","httpOnly","overwrite","fn","assign","target","i","arguments","source","prototype","hasOwnProperty","call"],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"server\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"server\"] = factory();\n\telse\n\t\troot[\"server\"] = factory();\n})(this, function() {\nreturn ","export const tokenExpires = 24 * 60 * 60 * 1000\nexport const port = 3100\n\n    ","const env = process.env.NODE_ENV; // 环境参数\nlet MYSQL_CONF = null;\n\nif (env === 'development') {\n    MYSQL_CONF = {\n        host: '127.0.0.1',\n        user: 'root',\n        password: '123456',\n        port: '3306',\n        database: 'admin',\n        // charset:'utf8mb4',   //字符集一定要写，否则表情包存储不了\n        multipleStatements: true, // 是否许一个query中有多个MySQL语句 （默认：false）\n    };\n}\nif (env === 'production') {\n    MYSQL_CONF = {\n        host: '127.0.0.1',\n        user: 'root',\n        password: '123456',\n        port: '3306',\n        database: 'admin',\n        charset: 'utf8mb4', //字符集一定要写，否则表情包存储不了\n        multipleStatements: true, // 是否许一个query中有多个MySQL语句 （默认：false）\n    };\n}\nexport { MYSQL_CONF };\n","export * from './db.js';\nexport * from './redis.js';\nexport * from './token.js';\nexport * from './constant.js';\n\n// export const MYSQL_CONF={\n//     name:123\n// }\n","const env = process.env.NODE_ENV  // 环境参数\nlet REDIS_CONF = null\n\nif (env === 'development') {\n    REDIS_CONF = {\n        host: '127.0.0.1', //地址\n        port: '6378', // 端口\n        options:{\n            auth_pass: 123456 // 密码\n        }\n    }\n}\nif (env === 'production') {\n    REDIS_CONF = {\n        host: '127.0.0.1',\n        port: '6378',\n        options:{\n            auth_pass: 123456\n        }\n    }\n}\n\nmodule.exports = {\n    REDIS_CONF\n}\n\n","import { tokenExpires } from './constant';\n\nexport const setExpirationTime = () => {\n    const millisecond = new Date().getTime();\n    const expiresTime = new Date(millisecond + tokenExpires); //一天后过期\n\n    return  expiresTime // da.toUTCString(); //将 1598789234953这种格式的转换成=> \"Sat, 29 Aug 2020 12:06:33 GMT\"\n};\n","const graphqlError = {\n  code :400,\n  msg :\"请求参数有误，graphql语法错误\",\n}\n\n\nconst unsupported = {\n  //对于当前请求的方法和所请求的资源，请求中提交的实体并不是服务器中所支持的格式，因此请求被拒绝。\n  code :415,\n  msg :\"服务器已经理解请求，但是拒绝执行它\",\n}\n\nconst unauthorized = {\n  // 当前请求需要用户验证. 如果验证不通过则返回401\n  code :401,\n  msg :\"当前请求需要用户验证.\",\n}\n\n \n\nexport {graphqlError,unsupported ,unauthorized };\n","// 整体输出\nexport * from './httpCode';","import userService from \"../service/user\";\nimport { unsupported, unauthorized } from \"../constant\";\nimport { merge } from \"../utils\";\nclass Controller {\n  static async add(ctx, next) {\n    // ctx.set(\"Content-Type\", \"application/json\")\n    const parameter = ctx.request.body; // 获取请求参数\n    //添加service\n    const data = await userService.add(ctx, next, parameter);\n    const getMessage = (data) => {\n      const { status } = data;\n      const message = {\n        1: () =>\n          merge(unsupported, {\n            msg: \"该用户名已经被注册过,请重新输入用户名\",\n          }),\n        2: () =>\n          merge(unsupported, {\n            msg: \"该手机号码已经被注册过,请重新输入手机号码\",\n          }),\n        3: () => ({\n          code: 200,\n          msg: \"注册成功\",\n        }),\n      };\n      return message[status]();\n    };\n    ctx.response.body = getMessage(data);\n  }\n  static edit(ctx, next) {\n    ctx.set(\"Content-Type\", \"application/json\");\n\n    var page = ctx.params.page; // 获取请求参数\n    //添加service\n    // const data = userService.list(page);\n\n    // ctx.response.body = \"d\";\n  }\n\n  static async login(ctx, next) {\n    // ctx.set(\"Content-Type\", \"application/json\")\n    var parameter = ctx.request.body; // 获取请求参数\n    //添加service\n    const data = await userService.login(ctx, next, parameter);\n    const getMessage = (data) => {\n      const { status, token, userInfo } = data;\n      const message = {\n        1: () =>\n          merge(unauthorized, {\n            msg: \"用户名错误，请重新输入用户名\",\n          }),\n        2: () =>\n          merge(unauthorized, {\n            msg: \"密码错误请重新输入密码\",\n          }),\n        3: () => ({\n          code: 200,\n          msg: \"登录成功\",\n          data: {\n            token,\n            userInfo,\n          },\n        }),\n      };\n      return message[status]();\n    };\n    ctx.response.body = getMessage(data);\n  }\n}\n\nexport default Controller;\n","import { connection, exec } from \"./mysql\";\nconst { MYSQL_CONF } = require(\"../config/db\");\n\nclass CheckTable {\n  constructor() {\n    this.tables = [\n      {\n        name: \"user\",\n        sql: `CREATE TABLE user(\n                    id INT(11) PRIMARY KEY  auto_increment primary key,\n                    name VARCHAR(25),\n                    phone VARCHAR(200),\n                    password VARCHAR(255)\n                ) AUTO_INCREMENT=1;\n           `,\n      },\n      {\n          name: 'collect',\n          sql: `\n         CREATE TABLE collect(\n              id INT(11) PRIMARY KEY,\n              name VARCHAR(25)  NOT NULL,\n              phone INT(11)  NOT NULL,\n              user_id INT(11)  NOT NULL,\n              FOREIGN KEY(user_id) REFERENCES user(id)\n         );\n         `,\n      },\n      {\n          name: 'code',\n          sql: `\n          CREATE TABLE code(\n            id INT(11) PRIMARY KEY,\n            name VARCHAR(25),\n            collect_id INT(11),\n            FOREIGN KEY(collect_id) REFERENCES collect(id),\n            user_id INT(11),\n            FOREIGN KEY(user_id) REFERENCES user(id)\n            );\n          `,\n      },\n      {\n        name: 'role',\n        sql: `\n        CREATE TABLE role(\n          id INT(11) PRIMARY KEY,\n          name VARCHAR(25),\n          root TINYINT(2)\n          );\n        `,\n       },\n    ];\n    this.init();\n  }\n  init() {\n    this.tables.forEach((table) => {\n      this.queryTable(table);\n    });\n  }\n  createTable() {}\n  async checkTable(data, table) {\n    if (data.length == 0) {\n      await exec(table.sql)\n        .then((data) => {\n          console.log(\"创建表成功\");\n        })\n        .catch((error) => {\n          console.log(\"创建表失败=\", error);\n        });\n    }\n  }\n  async queryTable(table) {\n    const sql = `\n           SELECT\n           TABLE_NAME FROM INFORMATION_SCHEMA.TABLES\n           WHERE TABLE_SCHEMA='${MYSQL_CONF.database}' \n           AND TABLE_NAME= '${table.name}'`;\n    await exec(sql)\n      .then(async (data) => {\n        await this.checkTable(data, table);\n      })\n      .catch(() => {});\n  }\n}\n\nexport { CheckTable };\n","export { CheckTable } from './checkTable';\nexport { connection, exec } from './mysql';\nexport { addUser, deleteUser, queryUser } from './user';\n","import mysql from 'mysql';\nimport { MYSQL_CONF } from '../config/index';\n \n\n// 创建链接对象\nconst connection  = mysql.createConnection(MYSQL_CONF)\n\n\n// 统一执行 sql 的函数\nconst  exec = async (sql)=> {\n    return   await  new Promise((resolve, reject) => {\n        console.log('sql=',sql)\n        connection.query(sql, (err, result) => {\n            if (err) {\n                reject(err)\n                return\n            }\n            resolve(result)\n        })\n    })\n}\n\nexport {\n    connection,\n    exec,\n}\n","import { connection, exec } from \"./mysql\";\n// 添加用户\nconst addUser = async ({ name, phone, password }) => {\n  const sql = `insert into user(name,phone,password) values('${name}','${phone}',md5('${password}'));`;\n \n  return await exec(sql);\n};\n\n//查询用户\nconst queryUser = async (andConditionData = {}, orConditionData = {}, sql) => {\n  const andKeys = Object.keys(andConditionData);\n  const orKeys = Object.keys(orConditionData);\n  if (sql) {\n    return await exec(sql);\n  }\n  sql = `select * from user where `;\n\n  andKeys.forEach((key) => {\n    sql +=\n      key == \"password\"\n        ? ` ${key}=md5('${andConditionData[key]}') and`\n        : ` ${key}='${andConditionData[key]}' and`;\n  });\n\n  orKeys.forEach((key) => {\n    sql +=\n      key == \"password\"\n        ? ` ${key}=md5('${orConditionData[key]}') or`\n        : ` ${key}='${orConditionData[key]}' or`;\n  });\n  sql =\n    andKeys.length >= 1 && orKeys.length == 0\n      ? sql.substring(0, sql.length - 3)\n      : orKeys.length >= 1\n      ? sql.substring(0, sql.length - 2)\n      : sql;\n\n  \n  return await exec(sql);\n};\n\n//删除用户\nconst deleteUser = async (id) => {\n  const sql = `DELETE  FROM user  WHERE id=${id};`;\n  return await exec(sql);\n};\n\n// 导出\nexport { addUser, deleteUser, queryUser };\n","import {\n  GraphQLObjectType,\n  GraphQLNonNull,\n  GraphQLSchema,\n  GraphQLString,\n  GraphQLList,\n} from \"graphql/type\";\n//会员模块\nimport  userResolvers,  * as userSchema  from './user';\nconst user ={\n  userResolvers,\n  userSchema,\n}\n// import user from \"./user\";\n// import home from \"./home\";\nconsole.log('user=',user)\n\nexport  {user};\n// export {\n//   user\n// }\n","import resolvers from \"./resolvers\";\n// import * as schema from \"./schema\";\n// export * as userType from './schema.graphql'\n\nexport * from \"./schema\";\nexport * from \"./schema.graphql\";\n\nexport default resolvers;\n","// Provide resolver functions for your schema fields\nconst  hello = () => 'Hello world!';\n\n\nexport default {\n    mutation: {\n        // createUser,\n    },\n    query: {\n        // user,\n        // getUserInfo,\n        hello,\n    },\n};\n\n// export default {\n//         Query:{\n//             hello   \n//         }\n// }\n\n// export duf {\n//     Query:{\n//         hello\n//     }\n// }","export const hello = `\ntype Query {\n  hello: String\n}\n`;\n","import \"@babel/polyfill\";\nimport koa from \"koa\";\nimport { promise } from \"./utils\";\nimport { CheckTable, connection, exec, addUser } from \"./db/index.js\";\nimport { Redis } from \"./redis\";\nimport Route from \"./routes/index\";\nimport kill from \"kill-port\";\nimport { port } from \"./config\";\nconsole.log(1)\nclass App {\n  constructor() {\n          this.app = new koa();\n            this.init();\n  }\n  async init() {\n    // redis链接\n    await this.connectRedis();\n    // 数据库连接\n    await this.connectSql();\n    //加载路由\n    this.addRoute();\n    // 设置监听端口\n    this.listen();\n  }\n  async connectRedis() {\n    await promise((reslove, reject) => {\n      Redis.connect(() => {\n        console.log(\"Redis 链接成功\");\n        reslove();\n      });\n      Redis.error(() => {\n        console.log(\"Redis 链接错误\");\n        reject();\n      });\n    });\n  }\n  async connectSql() {\n    await promise((reslove, reject) => {\n      connection.connect((err) => {\n        if (err) {\n          console.log(\"数据库连失败\");\n          reject();\n          throw err;\n        }\n        new CheckTable();\n        console.log(\"mysql数据库连接成功\");\n        reslove();\n      });\n    });\n  }\n  addRoute() {\n    // 导入路由\n    new Route(this.app);\n  }\n  listen() {\n    // try {\n    //   kill(port, \"tcp\");\n    // } catch (e) {}\n\n    this.server = this.app.listen(port, () => {\n      console.log(`服务器启动成功:http://localhost:${port}/`);\n    });\n\n    this.server.setTimeout(5 * 60 * 1000);\n  }\n}\n\nexport default new App();\n","import  bodyParser  from 'koa-bodyparser';\nimport  cors  from 'koa2-cors';\nimport cookie from 'koa-cookie';\n \nconst common = (app, router) => {\n    // 处理404\n    // app.use(function* (next) {\n    //     try {\n    //         yield* next;\n    //     } catch (e) {\n    //         this.status = 500;\n    //         this.body = '500';\n    //     }\n    //     if (parseInt(this.status) === 404) {\n    //         this.body = '404';\n    //     }\n    // });\n\n    //处理500\n    // router.get('/', function* (next) {\n    //     throw new Error('500');\n    // });\n\n    // 添加获取参数中间件\n    app.use(bodyParser());\n    // 添加 cookie\n    // app.use(cookie());\n    // // 添加跨域\n    // app.use(async (ctx, next)=> {\n    //   console.log(ctx.request.headers)\n    // // // if( req.headers.origin.toLowerCase() == \"http://www.zhangpeiyue.com\"\n    // // //     || req.headers.origin.toLowerCase() ==\"http://127.0.0.1\" ) {\n    // // //     //设置允许跨域的域名，*代表允许任意域名跨域\n    // // //     res.header(\"Access-Control-Allow-Origin\", req.headers.origin);\n    // // // }\n    //     // ctx.set('Access-Control-Allow-Origin', '*');\n    //      //设置允许跨域的域名，*代表允许任意域名跨域\n    //      ctx.set(\"Access-Control-Allow-Origin\",\"*\");\n    // //允许的header类型\n    // ctx.set(\"Access-Control-Allow-Headers\",\"content-type\");\n    // //跨域允许的请求方式 \n    // ctx.set(\"Access-Control-Allow-Methods\",\"DELETE,PUT,POST,GET,OPTIONS\");\n    // //     ctx.set('Access-Control-Allow-Headers', 'Content-Type, Content-Length, Authorization, Accept, X-Requested-With , yourHeaderFeild');\n    // //     ctx.set('Access-Control-Allow-Methods', 'PUT, POST, GET, DELETE, OPTIONS');\n    //      await next();\n    // //     if (ctx.method == 'OPTIONS') {\n    // //       ctx.body = 200; \n    // //     } else {\n    // //       await next();\n    // //     }\n    //   });\n    // 跨域\n      app.use(cors());\n\n};\n\nexport default common;\n","import common from './common'\n \n\nexport{\n    common, \n}\n     \n ","import RedisClass,{\n    Redis,\n    redisClient\n} from \"./redis\";\n \n\nexport    {\n    Redis,\n    redisClient,\n    RedisClass \n};\n\nexport *  from \"./jwt\";\nexport *  from \"./user\";\n ","import { Redis, redisClient } from \"./redis\";\nimport JWTR from \"jwt-redis\";\nimport webJwt from \"jsonwebtoken\";\nimport { merge, promise } from \"../utils\";\n// const jwtr = new JWTR(redisClient);\n// const { sign, verify, destroy } = jwtr;\nconst { sign, verify, decode } = webJwt;\n// var secret = \"secret\";\n// var jti = \"test\";\n// var payload = { jti };\n\n// 用用户id验证token\nconst userIdCheckToken = (userId) => {\n  return promise((resolve, reject) => {\n    redisClient.keys(`userid_${userId}_*`, (error, value) => {\n      if (error) {\n        reject(error);\n      } else {\n        resolve(value);\n      }\n    });\n  });\n};\n\n//验证token\nconst checkToken = (token) => {\n  return promise((resolve, reject) => {\n    redisClient.keys(`userid_*_${token}`, (error, value) => {\n      if (error) {\n        reject(error);\n      } else {\n        resolve(value);\n      }\n    });\n  });\n};\n\nconst createToken = async (userInfo = {}, payload = {}) => {\n  const { id = \"\" } = userInfo;\n  //  产生token\n  payload = merge(\n    {\n      ctime: Date.now(), //创建时间\n    },\n    payload\n  );\n  //创建token\n  const token = await sign(payload, `${id}`, { expiresIn: 0 });\n  //获取用户token key\n  const userIdTokens = await userIdCheckToken(id);\n  if (userIdTokens && userIdTokens.length >= 1) {\n    // 删除多余的key实现单点登录\n    userIdTokens.forEach(async (key) => {\n      await Redis.del(key);\n    });\n  }\n  // 重新设置 redis \n  await Redis.set(`userid_${id}_${token}`, JSON.stringify(userInfo));\n\n  return token;\n};\n\n//销毁token\nconst destroyToken = async(tokenOrId) => {\n  const userIdTokens = await userIdCheckToken(tokenOrId)||[];\n  const tokens = await checkToken(tokenOrId)||[];\n  merge(userIdTokens,tokens).forEach(async (key)=>{\n    await Redis.del(key);\n  }) \n  return \"成功删除token\"\n};\n\n\nexport { createToken, checkToken, destroyToken,userIdCheckToken };\n","import redis from 'redis';\nimport { merge, promise } from '../utils';\nimport { REDIS_CONF } from '../config';\nclass RedisClass {\n    constructor(port, url, options = {}) {\n        this.port = port;\n        this.url = url;\n        this.options = options;\n    }\n    //连接\n    createRedisClient() {\n        this.redisClient = redis.createClient(\n            this.port,\n            this.url,\n            this.options\n        );\n    }\n    // 连接\n    connect(callback = () => {}) {\n        return promise((resolve, reject) => {\n            this.redisClient.on('connect', () => {\n                callback();\n                resolve();\n            });\n        });\n    }\n    ready(callback = () => {}) {\n        return promise((resolve, reject) => {\n            this.redisClient.on('ready', (err, res) => {\n                if (err) {\n                    callback(error);\n                    reject(error);\n                } else {\n                    resolve(res);\n                }\n            });\n        });\n    }\n    error(callback = () => {}) {\n        return promise((resolve, reject) => {\n            this.redisClient.on('error', (error) => {\n                callback(error);\n                reject(error);\n            });\n        });\n    }\n    end(callback = () => {}) {\n        this.redisClient.on('end', (err, res) => {\n            if (err) {\n                callback(error);\n                reject(error);\n            } else {\n                resolve(res);\n            }\n        });\n    }\n    set(key, value, callback = () => {},options=()=>{}) {\n      return promise((resolve, reject) => {\n        this.redisClient.set(key, value, (error, res) => {\n            if (error) {\n                callback(error);\n                reject(error);\n            } else {\n                let keys = Object.keys(options) \n                keys.forEach((_key)=>{\n                  this.redisClient[_key](key,options[key])\n                })\n                callback(res);\n                resolve(res);\n            }\n        });\n    });\n\n    }\n    get(key,callback=()=>{}) {\n        return promise((resolve, reject) => {\n            this.redisClient.get(key, (error, res) => {\n                if (error) {\n                    callback(error);\n                    reject(error);\n                } else {\n                    resolve(res);\n                }\n            });\n        });\n    }\n    del(key,callback=()=>{}){\n        return promise((resolve, reject) => {\n            this.redisClient.del(key, (error, res) => {\n                if (error) {\n                    callback(error);\n                    reject(error);\n                } else {\n                    resolve(res);\n                }\n            });\n        });\n    }\n    init() {\n        this.createRedisClient();\n        return this;\n    }\n}\n \n\nexport const Redis = new RedisClass(\n    REDIS_CONF.port,\n    REDIS_CONF.host,\n    REDIS_CONF.options\n);\n\nRedis.init();\nexport const redisClient = Redis.redisClient;\nexport default RedisClass;\n","import {userIdCheckToken,checkToken } from \"./jwt\";\nimport { Redis, redisClient } from \"./redis\";\nimport { merge, promise } from '../utils';\n\n// 获取用户信息\nconst getUserIfo = async (tokenOrId) => {\n  const userIdTokens = (await userIdCheckToken(tokenOrId)) || [];\n  const tokens = (await checkToken(tokenOrId)) || [];\n  const data = await Redis.get(merge(userIdTokens,tokens)[0]);\n  return data;\n};\n\nexport { getUserIfo };\n","import {\n  GraphQLObjectType,\n  GraphQLNonNull,\n  GraphQLSchema,\n  GraphQLString,\n  GraphQLList,\n} from \"graphql/type\";\nimport {\n  graphql,\n  Source,\n  validateSchema,\n  parse,\n  validate,\n  execute,\n  formatError,\n  getOperationAST,\n  specifiedRules,\n  validationRules,\n  // gql,\n} from \"graphql\";\n// import schema from '../graphql/schema';\nimport httpError from \"http-errors\";\nimport { merge } from \"../utils\";\nimport { graphqlError } from \"../constant\";\nimport Router from \"koa-router\";\nimport { makeExecutableSchema } from \"graphql-tools\";\n// import Home from \"./home\";\nimport User from \"./user\";\nimport { common } from \"../middleware/index\";\nimport { user } from \"../graphql/schema\"; \n// import  userResolvers,  * as userSchema  from '../graphql/schema/user/index.js';\n\n\n\n// console.log('userResolvers===',userResolvers)\n// console.log('userSchema===',userSchema)\n//  Construct a schema, using GraphQL schema language\nconst typeDefs = `\n  type Query {\n    hello: String\n  }\n`;\n\n  \n// Provide resolver functions for your schema fields\nconst resolvers = {\n  Query: {\n    hello: () => \"Hello world!\",\n  },\n};\n\nclass Route {\n  constructor(app) {\n    this.app = app;\n    // this.router = router;\n    this.init();\n  }\n  createRouter() {\n    this.router = new Router({\n      prefix: \"/api\", // 给路由统一加个前缀：\n    });\n  }\n  // 添加中间件\n  middleware() {\n    // this.app.use(\n    //   webpackDevMiddleware(compiler, {\n    //     publicPath: config.output.publicPath,\n    //   })\n    // );\n\n    // 添加 404 500 中间件\n    common(this.app, this.router);\n  }\n\n  checkToken() {\n    this.router.use(async (ctx, next) => {\n      // console.log('ctx.request==',ctx.request.header)\n      const {\n        request: { header },\n        cookies,\n      } = ctx;\n\n      let token = cookies.get(\"token\") || header.token;\n      console.log(\"token=\", token);\n\n      //   ctx.cookies.set('cid','comedy',{\n      //     domain:'localhost',     //写cookie所在的域名\n      //     path:'/index',          //写cookie所在的路径\n      //     maxAge:60*1000,         //写cookie有效时长\n      //     expires:7,\n      //     httpOnly:false,\n      //     overwrite:false\n      // })\n      // ctx.body = 'cookie is ok'\n\n      console.log(\"中间键1开始\");\n\n      await next();\n      console.log(\"中间键1结束\");\n    });\n  }\n  // 添加路由\n  addRouters() {\n    new User(this.app, this.router);\n    // new Home(this.app,router);\n\n    console.log(\"checkToken====\");\n\n    this.checkToken();\n\n    // 查询\n    this.router.get(\"/data\", async (ctx, next) => {\n      const {\n        query: { query = \"\", variables = {} },\n        response,\n        request,\n      } = ctx;\n      const {\n        body: {\n          // mutation = '', variables = {}\n        },\n      } = request;\n\n      // const { query = '', variables = {} } = ctx.query;\n      // const { response } = ctx;\n      // console.log('schema==',schema)\n      console.log(\"query==\", query);\n      console.log(\"variables==\", variables);\n      console.log(\"token=====\", ctx.cookies.get(\"token\"));\n      // ctx.response.body = {\n      //   name:'123'\n      // }\n      const baseSchema = `\n                    schema {\n                        query: Query\n                        mutation: Mutation\n                    }\n              `;\n\n      const schema = makeExecutableSchema({\n        typeDefs: [\n          // baseSchema,\n          typeDefs,\n          //   baseSchema,\n          //   userType,\n          //   songType,\n          //   playlistType\n        ],\n        resolvers: resolvers,\n        //  merge(\n        //   {},\n        //   userResolvers,\n        //   songResolvers,\n        //   playlistResolvers\n        // )\n      });\n\n      await graphql(schema, query, { ctx, next }, variables)\n        .then((data) => {\n          const { errors } = data;\n          console.log(\"data=\", data);\n          console.log(\"stringify data=\", JSON.stringify(data));\n\n          if (errors) {\n            response.body = merge(graphqlError, {\n              errors,\n            });\n          } else {\n            console.log(\"get==\", data);\n            // ctx.response.body = {\n            //   name:'123'\n            // }\n            response.body = data;\n\n            // JSON.stringify(data);\n          }\n        })\n        .catch((error) => {\n          console.log(\"error==\", error);\n        });\n    });\n    // //变异\n    // this.router.post('/data', async (ctx, next) => {\n    //     const {\n    //         // query: { query = '', variables = {} },\n    //         response,\n    //         request,\n    //     } = ctx;\n    //     const {\n    //         body: { mutation = '', variables = {} },\n    //     } = request;\n    //     await graphql(schema, mutation, { ctx, next }, variables)\n    //         .then((data) => {\n    //             const { errors } = data;\n    //             if (errors) {\n    //                 response.body = merge(graphqlError, {\n    //                     errors,\n    //                 });\n    //             } else {\n    //                 console.log('post==', data);\n    //                 response.body = data;\n    //             }\n    //         })\n    //         .catch((error) => {\n    //             console.log('error==', error);\n    //         });\n    // });\n\n    //  const server = new ApolloServer({ typeDefs, resolvers });\n\n    //  this.router.get('/data',server.getMiddleware())\n    // 挂载路由中间件\n    this.app.use(this.router.routes()).use(this.router.allowedMethods());\n\n    // this.app.use(this.router.routes()).use(this.router.allowedMethods());\n  }\n  init() {\n    // 添加中间件\n    this.middleware();\n    //创建路由\n    this.createRouter();\n\n    // 添加路由\n    this.addRouters();\n  }\n}\n\nexport default   Route;\n","import controller from \"../controller/user\";\nimport Router from \"koa-router\"; // koa 路由中间件\n\nclass Route {\n  constructor(app, router) {\n    this.app = app;\n    this.router = router;\n    this.init();\n  }\n  createRouter() {\n    this.secondaryRoute = new Router({\n      prefix: \"/user\", // 给路由统一加个前缀：\n    });\n    return this.secondaryRoute;\n  }\n  middleware() {\n    // 处理404\n    // this.app.use('/user',function* (next) {\n    //     try {\n    //         yield* next;\n    //     } catch (e) {\n    //         this.status = 500;\n    //         this.body = '500';\n    //     }\n    //     if (parseInt(this.status) === 404) {\n    //         this.body = '404';\n    //     }\n    // });\n  }\n  // 添加路由\n  addRouters() {\n    // 添加路由\n    this.registered();\n    this.login();\n    this.router.use(this.secondaryRoute.routes()); //挂载二级路由\n  }\n  init() {\n    // 创建路由\n    this.createRouter();\n    // 添加中间件\n    this.middleware();\n    // 添加路由\n    this.addRouters();\n  }\n  registered() {\n    // 添加 接口\n    this.secondaryRoute.post(\"/register\", controller.add);\n  }\n  login() {\n    // 添加 接口\n    this.secondaryRoute.post(\"/login\", controller.login);\n  }\n}\n\nexport default Route;\n","import { addUser, deleteUser, queryUser } from '../db/user';\nimport { unsupported, unauthorized } from '../constant';\nimport { merge } from '../utils';\nimport { createToken, checkToken, destroyToken, getUserIfo } from '../redis';\nimport { setExpirationTime } from '../config';\n\n\nclass Service {\n    static list(page) {\n        console.log('page=', page);\n        const dataList = {\n            list: [\n                {\n                    time: '2019-7-10',\n                    id: 1,\n                    title: 'this is news 1',\n                    url: '/news/1',\n                },\n                {\n                    time: '2019-8-10',\n                    id: 2,\n                    title: 'this is news 2',\n                    url: '/news/2',\n                },\n            ],\n        };\n\n        return dataList.list[page] || {};\n    }\n\n    //注册用户\n    static async add(ctx, next, parameter) {\n        const { username: name, phone, password } = parameter;\n        /*\n     1 查询用户名是否被注册过，\n     2 查询手机号码是否被注册过\n     3 如果都没有被注册那么就可以注册\n    */\n        let userInfo = await this.queryUser({\n            name,\n        });\n\n        userInfo = userInfo.length >= 1 ? userInfo[0] : null;\n        if (userInfo && userInfo.id) {\n            return {\n                status: 1,\n            };\n        }\n\n        userInfo = await this.queryUser({\n            phone,\n        });\n        userInfo = userInfo.length >= 1 ? userInfo[0] : null;\n        if (userInfo && userInfo.id) {\n            return {\n                status: 2,\n            };\n        }\n        const data = await addUser({\n            name,\n            phone,\n            password,\n        });\n        if (data) {\n            return {\n                status: 3,\n            };\n        }\n    }\n    // 编辑用户\n    static async edit(ctx, next, parameter) {}\n    // 数据库中查询用户\n    static async queryUser(...ags) {\n        const userData = await queryUser(...ags);\n        return userData;\n    }\n    // 登录\n    static async login(ctx, next, parameter = {}) {\n        const { username: name, phone, password } = parameter;\n        const { request, response,cookies } = ctx;\n \n\n        /*\n      1.先查询用户名是否正确，\n      2.查询用户和密码是否正确\n      3.创建token,存储到redis中\n      4.把用户信息挂载response中\n    */\n        let userInfo = await this.queryUser({\n            name,\n        });\n\n        userInfo = userInfo.length >= 1 ? userInfo[0] : null;\n        if (!userInfo) {\n            return {\n                status: 1,\n            };\n        }\n\n        userInfo = await this.queryUser({\n            password,\n        });\n        userInfo = userInfo.length >= 1 ? userInfo[0] : null;\n        if (!userInfo) {\n            return {\n                status: 2,\n            };\n        }\n        userInfo = await queryUser({\n            name,\n            password,\n        });\n        userInfo = userInfo.length >= 1 ? userInfo[0] : null;\n\n        /*\n     创建 createToken  \n    */\n        const token = await createToken(userInfo);\n        delete userInfo.password;\n        ctx.response.userInfo = userInfo;\n        console.log('setExpirationTime=', setExpirationTime());\n        // console.log('token=', token);\n        // console.log('request=', request);\n        // console.log('session=', session);\n       console.log('cookies===',cookies)\n\n        // cookie.expires = false;\n        // cookie.maxAge = 5 * 60 * 1000;\n        cookies.set('token', token, {\n            httpOnly: false,\n            overwrite: false,\n            // expires: setExpirationTime(),\n        });\n        if (userInfo) {\n            //登录成功\n            return {\n                status: 3,\n                token,\n                userInfo,\n            };\n        }\n    }\n}\n\nexport default Service;\n","const promise =(fn=()=>{})=>{\n   \n  return new Promise((resolve,reject)=>{\n      fn(resolve,reject)\n  })\n\n}\n\nconst merge = Object.assign ||\n  function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n\nexport {\n    promise ,\n    merge\n};\n","import { promise, merge } from \"./common\";\n// export * from \"./jwt\";\n\nexport { merge, promise };\n","export default \"type User {\\n  id: ID!\\n  username: String!\\n  createdAt: String!\\n  updatedAt: String!\\n}\\n\\ninput UpdatedUser {\\n  username: String!\\n}\\n\\ntype Query {\\n  getMe: User!\\n}\\n\\ntype Mutation {\\n  updateMe(input: UpdatedUser!): User!\\n}\\n\";","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\nmodule.exports = function (updatedModules, renewedModules) {\n\tvar unacceptedModules = updatedModules.filter(function (moduleId) {\n\t\treturn renewedModules && renewedModules.indexOf(moduleId) < 0;\n\t});\n\tvar log = require(\"./log\");\n\n\tif (unacceptedModules.length > 0) {\n\t\tlog(\n\t\t\t\"warning\",\n\t\t\t\"[HMR] The following modules couldn't be hot updated: (They would need a full reload!)\"\n\t\t);\n\t\tunacceptedModules.forEach(function (moduleId) {\n\t\t\tlog(\"warning\", \"[HMR]  - \" + moduleId);\n\t\t});\n\t}\n\n\tif (!renewedModules || renewedModules.length === 0) {\n\t\tlog(\"info\", \"[HMR] Nothing hot updated.\");\n\t} else {\n\t\tlog(\"info\", \"[HMR] Updated modules:\");\n\t\trenewedModules.forEach(function (moduleId) {\n\t\t\tif (typeof moduleId === \"string\" && moduleId.indexOf(\"!\") !== -1) {\n\t\t\t\tvar parts = moduleId.split(\"!\");\n\t\t\t\tlog.groupCollapsed(\"info\", \"[HMR]  - \" + parts.pop());\n\t\t\t\tlog(\"info\", \"[HMR]  - \" + moduleId);\n\t\t\t\tlog.groupEnd(\"info\");\n\t\t\t} else {\n\t\t\t\tlog(\"info\", \"[HMR]  - \" + moduleId);\n\t\t\t}\n\t\t});\n\t\tvar numberIds = renewedModules.every(function (moduleId) {\n\t\t\treturn typeof moduleId === \"number\";\n\t\t});\n\t\tif (numberIds)\n\t\t\tlog(\n\t\t\t\t\"info\",\n\t\t\t\t'[HMR] Consider using the optimization.moduleIds: \"named\" for module names.'\n\t\t\t);\n\t}\n};\n","var logLevel = \"info\";\n\nfunction dummy() {}\n\nfunction shouldLog(level) {\n\tvar shouldLog =\n\t\t(logLevel === \"info\" && level === \"info\") ||\n\t\t([\"info\", \"warning\"].indexOf(logLevel) >= 0 && level === \"warning\") ||\n\t\t([\"info\", \"warning\", \"error\"].indexOf(logLevel) >= 0 && level === \"error\");\n\treturn shouldLog;\n}\n\nfunction logGroup(logFn) {\n\treturn function (level, msg) {\n\t\tif (shouldLog(level)) {\n\t\t\tlogFn(msg);\n\t\t}\n\t};\n}\n\nmodule.exports = function (level, msg) {\n\tif (shouldLog(level)) {\n\t\tif (level === \"info\") {\n\t\t\tconsole.log(msg);\n\t\t} else if (level === \"warning\") {\n\t\t\tconsole.warn(msg);\n\t\t} else if (level === \"error\") {\n\t\t\tconsole.error(msg);\n\t\t}\n\t}\n};\n\n/* eslint-disable node/no-unsupported-features/node-builtins */\nvar group = console.group || dummy;\nvar groupCollapsed = console.groupCollapsed || dummy;\nvar groupEnd = console.groupEnd || dummy;\n/* eslint-enable node/no-unsupported-features/node-builtins */\n\nmodule.exports.group = logGroup(group);\n\nmodule.exports.groupCollapsed = logGroup(groupCollapsed);\n\nmodule.exports.groupEnd = logGroup(groupEnd);\n\nmodule.exports.setLogLevel = function (level) {\n\tlogLevel = level;\n};\n\nmodule.exports.formatError = function (err) {\n\tvar message = err.message;\n\tvar stack = err.stack;\n\tif (!stack) {\n\t\treturn message;\n\t} else if (stack.indexOf(message) < 0) {\n\t\treturn message + \"\\n\" + stack;\n\t} else {\n\t\treturn stack;\n\t}\n};\n","/*\n\tMIT License http://www.opensource.org/licenses/mit-license.php\n\tAuthor Tobias Koppers @sokra\n*/\n/*globals __resourceQuery */\nif (module.hot) {\n\tvar hotPollInterval = +__resourceQuery.substr(1) || 10 * 60 * 1000;\n\tvar log = require(\"./log\");\n\n\tvar checkForUpdate = function checkForUpdate(fromUpdate) {\n\t\tif (module.hot.status() === \"idle\") {\n\t\t\tmodule.hot\n\t\t\t\t.check(true)\n\t\t\t\t.then(function (updatedModules) {\n\t\t\t\t\tif (!updatedModules) {\n\t\t\t\t\t\tif (fromUpdate) log(\"info\", \"[HMR] Update applied.\");\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t\trequire(\"./log-apply-result\")(updatedModules, updatedModules);\n\t\t\t\t\tcheckForUpdate(true);\n\t\t\t\t})\n\t\t\t\t.catch(function (err) {\n\t\t\t\t\tvar status = module.hot.status();\n\t\t\t\t\tif ([\"abort\", \"fail\"].indexOf(status) >= 0) {\n\t\t\t\t\t\tlog(\"warning\", \"[HMR] Cannot apply update.\");\n\t\t\t\t\t\tlog(\"warning\", \"[HMR] \" + log.formatError(err));\n\t\t\t\t\t\tlog(\"warning\", \"[HMR] You need to restart the application!\");\n\t\t\t\t\t} else {\n\t\t\t\t\t\tlog(\"warning\", \"[HMR] Update failed: \" + log.formatError(err));\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t}\n\t};\n\tsetInterval(checkForUpdate, hotPollInterval);\n} else {\n\tthrow new Error(\"[HMR] Hot Module Replacement is disabled.\");\n}\n","module.exports = require(\"@babel/polyfill\");;","module.exports = require(\"graphql\");;","module.exports = require(\"graphql-tools\");;","module.exports = require(\"graphql/type\");;","module.exports = require(\"http-errors\");;","module.exports = require(\"jsonwebtoken\");;","module.exports = require(\"jwt-redis\");;","module.exports = require(\"kill-port\");;","module.exports = require(\"koa\");;","module.exports = require(\"koa-bodyparser\");;","module.exports = require(\"koa-cookie\");;","module.exports = require(\"koa-router\");;","module.exports = require(\"koa2-cors\");;","module.exports = require(\"mysql\");;","module.exports = require(\"redis\");;"],"sourceRoot":""}